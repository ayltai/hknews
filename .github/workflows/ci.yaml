name: CI
on: [push]
jobs:
  check-java:
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run Checkstyle linter
        run: ./gradlew checkJava
      - name: Upload Checkstyle report
        uses: actions/upload-artifact@v2
        with:
          name: checkstyle-report
          path: build/reports/checkstyle/
      - name: Upload SpotBugs report
        uses: actions/upload-artifact@v2
        with:
          name: spotbugs-report
          path: build/reports/spotbugs/
  check-terraform:
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Create Terraform credentials file
        run: 'echo "$TF_CLI_CONFIG_FILE" > src/main/terraform/.terraformrc'
        env:
          TF_CLI_CONFIG_FILE: ${{ secrets.TF_CLI_CONFIG_FILE }}
      - name: Create Terraform variables file
        run: 'echo "$TERRAFORM_VARIABLES" > src/main/terraform/secrets.tfvars'
        env:
          TERRAFORM_VARIABLES: ${{ secrets.TERRAFORM_VARIABLES }}
      - name: Validate Terraform configurations
        run: ./gradlew checkTerraform
      - name: Plan for changes with Terraform configurations
        run: ./gradlew planTerraform
  test-apps:
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Run JavaScript unit tests
        run: ./gradlew testJavaScript
      - name: Upload JavaScript coverage report
        uses: actions/upload-artifact@v2
        with:
          name: javascript-coverage-report
          path: build/coverage/
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run Java unit tests
        run: ./gradlew testJava
      - name: Upload Java tests report
        uses: actions/upload-artifact@v2
        with:
          name: java-test-report
          path: build/reports/tests/test/
      - name: Generate Java coverage report
        run: ./gradlew jacocoTestReport
      - name: Upload Java coverage report
        uses: actions/upload-artifact@v2
        with:
          name: java-coverage-report
          path: build/reports/jacoco/test/html/
      - name: Run SonarQube scanner
        run: ./gradlew sonarqube
        if: ${{ always() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  test-ansible:
    runs-on: ubuntu-20.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Add Python tools path to PATH
        run: echo "::add-path::/home/runner/.local/bin"
      - name: Run Ansible unit tests
        run: ./gradlew testAnsible
